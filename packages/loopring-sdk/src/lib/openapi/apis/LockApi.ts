/* tslint:disable */
/* eslint-disable */
/**
 * SDK for Loopring Layer 2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LockAssetRequest,
  LockAssetResponse,
  ResultInfo,
  UnlockAssetRequest,
} from '../models/index';
import {
    LockAssetRequestFromJSON,
    LockAssetRequestToJSON,
    LockAssetResponseFromJSON,
    LockAssetResponseToJSON,
    ResultInfoFromJSON,
    ResultInfoToJSON,
    UnlockAssetRequestFromJSON,
    UnlockAssetRequestToJSON,
} from '../models/index';

export interface LockAssetOperationRequest {
    xAPIKEY: string;
    xAPISIG: string;
    lockAssetRequest: LockAssetRequest;
}

export interface UnlockAssetOperationRequest {
    xAPIKEY: string;
    xAPISIG: string;
    unlockAssetRequest: UnlockAssetRequest;
}

/**
 * 
 */
export class LockApi extends runtime.BaseAPI {

    /**
     * Lock Asset.
     * Lock Asset
     */
    async lockAssetRaw(requestParameters: LockAssetOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LockAssetResponse>> {
        if (requestParameters.xAPIKEY === null || requestParameters.xAPIKEY === undefined) {
            throw new runtime.RequiredError('xAPIKEY','Required parameter requestParameters.xAPIKEY was null or undefined when calling lockAsset.');
        }

        if (requestParameters.xAPISIG === null || requestParameters.xAPISIG === undefined) {
            throw new runtime.RequiredError('xAPISIG','Required parameter requestParameters.xAPISIG was null or undefined when calling lockAsset.');
        }

        if (requestParameters.lockAssetRequest === null || requestParameters.lockAssetRequest === undefined) {
            throw new runtime.RequiredError('lockAssetRequest','Required parameter requestParameters.lockAssetRequest was null or undefined when calling lockAsset.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xAPIKEY !== undefined && requestParameters.xAPIKEY !== null) {
            headerParameters['X-API-KEY'] = String(requestParameters.xAPIKEY);
        }

        if (requestParameters.xAPISIG !== undefined && requestParameters.xAPISIG !== null) {
            headerParameters['X-API-SIG'] = String(requestParameters.xAPISIG);
        }

        const response = await this.request({
            path: `/api/v3/lockAssets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LockAssetRequestToJSON(requestParameters.lockAssetRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LockAssetResponseFromJSON(jsonValue));
    }

    /**
     * Lock Asset.
     * Lock Asset
     */
    async lockAsset(requestParameters: LockAssetOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LockAssetResponse> {
        const response = await this.lockAssetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Unlock Asset.
     * Unlock Asset
     */
    async unlockAssetRaw(requestParameters: UnlockAssetOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LockAssetResponse>> {
        if (requestParameters.xAPIKEY === null || requestParameters.xAPIKEY === undefined) {
            throw new runtime.RequiredError('xAPIKEY','Required parameter requestParameters.xAPIKEY was null or undefined when calling unlockAsset.');
        }

        if (requestParameters.xAPISIG === null || requestParameters.xAPISIG === undefined) {
            throw new runtime.RequiredError('xAPISIG','Required parameter requestParameters.xAPISIG was null or undefined when calling unlockAsset.');
        }

        if (requestParameters.unlockAssetRequest === null || requestParameters.unlockAssetRequest === undefined) {
            throw new runtime.RequiredError('unlockAssetRequest','Required parameter requestParameters.unlockAssetRequest was null or undefined when calling unlockAsset.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xAPIKEY !== undefined && requestParameters.xAPIKEY !== null) {
            headerParameters['X-API-KEY'] = String(requestParameters.xAPIKEY);
        }

        if (requestParameters.xAPISIG !== undefined && requestParameters.xAPISIG !== null) {
            headerParameters['X-API-SIG'] = String(requestParameters.xAPISIG);
        }

        const response = await this.request({
            path: `/api/v3/unlockAssets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UnlockAssetRequestToJSON(requestParameters.unlockAssetRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LockAssetResponseFromJSON(jsonValue));
    }

    /**
     * Unlock Asset.
     * Unlock Asset
     */
    async unlockAsset(requestParameters: UnlockAssetOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LockAssetResponse> {
        const response = await this.unlockAssetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
