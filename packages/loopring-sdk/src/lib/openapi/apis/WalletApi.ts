/* tslint:disable */
/* eslint-disable */
/**
 * SDK for Loopring Layer 2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ResolveNameInfo,
  ResultInfo,
} from '../models/index';
import {
    ResolveNameInfoFromJSON,
    ResolveNameInfoToJSON,
    ResultInfoFromJSON,
    ResultInfoToJSON,
} from '../models/index';

export interface ResolveNameRequest {
    owner: string;
}

/**
 * 
 */
export class WalletApi extends runtime.BaseAPI {

    /**
     * Resolve address to loopring ENS name
     */
    async resolveNameRaw(requestParameters: ResolveNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResolveNameInfo>> {
        if (requestParameters.owner === null || requestParameters.owner === undefined) {
            throw new runtime.RequiredError('owner','Required parameter requestParameters.owner was null or undefined when calling resolveName.');
        }

        const queryParameters: any = {};

        if (requestParameters.owner !== undefined) {
            queryParameters['owner'] = requestParameters.owner;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/wallet/v3/resolveName`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResolveNameInfoFromJSON(jsonValue));
    }

    /**
     * Resolve address to loopring ENS name
     */
    async resolveName(requestParameters: ResolveNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResolveNameInfo> {
        const response = await this.resolveNameRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
