/* tslint:disable */
/* eslint-disable */
/**
 * SDK for Loopring Layer 2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LockAssetRequestToken } from './LockAssetRequestToken';
import {
    LockAssetRequestTokenFromJSON,
    LockAssetRequestTokenFromJSONTyped,
    LockAssetRequestTokenToJSON,
} from './LockAssetRequestToken';

/**
 * 
 * @export
 * @interface LockAssetRequest
 */
export interface LockAssetRequest {
    /**
     * accountId
     * @type {number}
     * @memberof LockAssetRequest
     */
    accountId: number;
    /**
     * eddsa signature of the eddsa hash
     * @type {string}
     * @memberof LockAssetRequest
     */
    eddsaSignature: string;
    /**
     * Exchange address
     * @type {string}
     * @memberof LockAssetRequest
     */
    exchange: string;
    /**
     * lockedUntil
     * @type {number}
     * @memberof LockAssetRequest
     */
    lockedUntil: number;
    /**
     * Tag
     * @type {string}
     * @memberof LockAssetRequest
     */
    tag: string;
    /**
     * timestamp
     * @type {number}
     * @memberof LockAssetRequest
     */
    timestamp: number;
    /**
     * 
     * @type {LockAssetRequestToken}
     * @memberof LockAssetRequest
     */
    token: LockAssetRequestToken;
}

/**
 * Check if a given object implements the LockAssetRequest interface.
 */
export function instanceOfLockAssetRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "eddsaSignature" in value;
    isInstance = isInstance && "exchange" in value;
    isInstance = isInstance && "lockedUntil" in value;
    isInstance = isInstance && "tag" in value;
    isInstance = isInstance && "timestamp" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function LockAssetRequestFromJSON(json: any): LockAssetRequest {
    return LockAssetRequestFromJSONTyped(json, false);
}

export function LockAssetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LockAssetRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': json['accountId'],
        'eddsaSignature': json['eddsaSignature'],
        'exchange': json['exchange'],
        'lockedUntil': json['lockedUntil'],
        'tag': json['tag'],
        'timestamp': json['timestamp'],
        'token': LockAssetRequestTokenFromJSON(json['token']),
    };
}

export function LockAssetRequestToJSON(value?: LockAssetRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'eddsaSignature': value.eddsaSignature,
        'exchange': value.exchange,
        'lockedUntil': value.lockedUntil,
        'tag': value.tag,
        'timestamp': value.timestamp,
        'token': LockAssetRequestTokenToJSON(value.token),
    };
}

