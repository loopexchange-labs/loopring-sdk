/* tslint:disable */
/* eslint-disable */
/**
 * SDK for Loopring Layer 2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TxHashInfo
 */
export interface TxHashInfo {
    /**
     * The hash identifier set by the user at the time of submission, can use this hash to get the transfer info
     * @type {string}
     * @memberof TxHashInfo
     */
    hash?: string;
    /**
     * Whether the order was successfully submitted or not, please note, user may query after a while to get real process status, as most offchain requests are async processed
     * @type {string}
     * @memberof TxHashInfo
     */
    status?: TxHashInfoStatusEnum;
    /**
     * Idempotent of submit transfer response, submit same transfer again idempotent will be true
     * @type {boolean}
     * @memberof TxHashInfo
     */
    isIdempotent?: boolean;
}


/**
 * @export
 */
export const TxHashInfoStatusEnum = {
    Received: 'received',
    Processing: 'processing',
    Processed: 'processed',
    Failed: 'failed'
} as const;
export type TxHashInfoStatusEnum = typeof TxHashInfoStatusEnum[keyof typeof TxHashInfoStatusEnum];


/**
 * Check if a given object implements the TxHashInfo interface.
 */
export function instanceOfTxHashInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TxHashInfoFromJSON(json: any): TxHashInfo {
    return TxHashInfoFromJSONTyped(json, false);
}

export function TxHashInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TxHashInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'isIdempotent': !exists(json, 'isIdempotent') ? undefined : json['isIdempotent'],
    };
}

export function TxHashInfoToJSON(value?: TxHashInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'status': value.status,
        'isIdempotent': value.isIdempotent,
    };
}

