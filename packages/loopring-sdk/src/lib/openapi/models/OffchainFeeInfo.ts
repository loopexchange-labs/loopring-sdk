/* tslint:disable */
/* eslint-disable */
/**
 * SDK for Loopring Layer 2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TokenFeeInfo } from './TokenFeeInfo';
import {
    TokenFeeInfoFromJSON,
    TokenFeeInfoFromJSONTyped,
    TokenFeeInfoToJSON,
} from './TokenFeeInfo';

/**
 * 
 * @export
 * @interface OffchainFeeInfo
 */
export interface OffchainFeeInfo {
    /**
     * gasPrice when calculating the fee
     * @type {string}
     * @memberof OffchainFeeInfo
     */
    gasPrice: string;
    /**
     * 
     * @type {Array<TokenFeeInfo>}
     * @memberof OffchainFeeInfo
     */
    fees: Array<TokenFeeInfo>;
}

/**
 * Check if a given object implements the OffchainFeeInfo interface.
 */
export function instanceOfOffchainFeeInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "gasPrice" in value;
    isInstance = isInstance && "fees" in value;

    return isInstance;
}

export function OffchainFeeInfoFromJSON(json: any): OffchainFeeInfo {
    return OffchainFeeInfoFromJSONTyped(json, false);
}

export function OffchainFeeInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OffchainFeeInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gasPrice': json['gasPrice'],
        'fees': ((json['fees'] as Array<any>).map(TokenFeeInfoFromJSON)),
    };
}

export function OffchainFeeInfoToJSON(value?: OffchainFeeInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gasPrice': value.gasPrice,
        'fees': ((value.fees as Array<any>).map(TokenFeeInfoToJSON)),
    };
}

