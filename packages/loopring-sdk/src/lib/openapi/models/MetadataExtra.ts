/* tslint:disable */
/* eslint-disable */
/**
 * SDK for Loopring Layer 2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MetadataExtra
 */
export interface MetadataExtra {
    /**
     * ImageData
     * @type {string}
     * @memberof MetadataExtra
     */
    imageData: string;
    /**
     * ExternalUrl
     * @type {string}
     * @memberof MetadataExtra
     */
    externalUrl: string;
    /**
     * Attributes
     * @type {string}
     * @memberof MetadataExtra
     */
    attributes: string;
    /**
     * BackgroundColor
     * @type {string}
     * @memberof MetadataExtra
     */
    backgroundColor: string;
    /**
     * AnimationUrl
     * @type {string}
     * @memberof MetadataExtra
     */
    animationUrl: string;
    /**
     * YoutubeUrl
     * @type {string}
     * @memberof MetadataExtra
     */
    youtubeUrl: string;
    /**
     * Minter
     * @type {string}
     * @memberof MetadataExtra
     */
    minter: string;
}

/**
 * Check if a given object implements the MetadataExtra interface.
 */
export function instanceOfMetadataExtra(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "imageData" in value;
    isInstance = isInstance && "externalUrl" in value;
    isInstance = isInstance && "attributes" in value;
    isInstance = isInstance && "backgroundColor" in value;
    isInstance = isInstance && "animationUrl" in value;
    isInstance = isInstance && "youtubeUrl" in value;
    isInstance = isInstance && "minter" in value;

    return isInstance;
}

export function MetadataExtraFromJSON(json: any): MetadataExtra {
    return MetadataExtraFromJSONTyped(json, false);
}

export function MetadataExtraFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetadataExtra {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'imageData': json['imageData'],
        'externalUrl': json['externalUrl'],
        'attributes': json['attributes'],
        'backgroundColor': json['backgroundColor'],
        'animationUrl': json['animationUrl'],
        'youtubeUrl': json['youtubeUrl'],
        'minter': json['minter'],
    };
}

export function MetadataExtraToJSON(value?: MetadataExtra | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'imageData': value.imageData,
        'externalUrl': value.externalUrl,
        'attributes': value.attributes,
        'backgroundColor': value.backgroundColor,
        'animationUrl': value.animationUrl,
        'youtubeUrl': value.youtubeUrl,
        'minter': value.minter,
    };
}

